/*
  Name: ##controllerName##.ino
  Created: ##date##
  Author: ##author##
*/

#include <SPI.h>
#include <Ethernet.h>
#include <MitoSoft.h>

// network configuration*******************************************
///hasnomqtt: byte mac[] = {##mac##}; //Format: { 0xA8, 0x61, 0x0A, 0xAE, 0x16, 0x3D };
///hasnomqtt: IPAddress ip(##ip##); 
///hasnomqtt: IPAddress broker(##brokerIp##);

///hasnomqtt: EthernetClient ethClient;
///hasnomqtt: EthernetHelper ethHelper(mac, ip, false);
///hasnomqtt: MqttClient mqttClient(ethClient);
///hasnomqtt: MqttHelper mqttHelper(mqttClient, 15000, false);

##coverDeclaration##
##lightDeclaration##
##additionalDeclaration##

void setup() {
  //Serial.begin(9600);
  //Serial.println("start ##controllerName##");

  ///hasnomqtt: ethHelper.fixIpSetup();

  ///hasnomqtt: mqttHelper.init(broker, "##controllerName##", "##brokerUserName##", "##brokerPassword##");

  // covers ***********************************************
##coverSetup##
  // lights ***********************************************
##lightSetup##
  // additional setup *************************************
##additionalSetup##
}

void loop() {
  String topic = "";
  String message = "";
  
  ///hasnomqtt: if (mqttHelper.onMessageReceived()){
  ///hasnomqtt:   topic = mqttHelper.getLastTopic();
  ///hasnomqtt:   message = mqttHelper.getLastMessage();
  ///hasnomqtt: }
  
##cover##
##light##
  // Additional code ***********************************************
##additionalCode##

  // Subscribe******************************************************
  ///hasnomqtt: if (mqttHelper.onConnected()){
  ///hasnomqtt:   mqttHelper.subscribe("##subscribedTopic##");
  ///hasnomqtt: }

  //****************************************************************
  ///hasnomqtt: ethHelper.loop();
  ///hasnomqtt: mqttHelper.loop();
  delay(10);
}